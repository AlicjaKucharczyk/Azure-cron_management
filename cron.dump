--
-- PostgreSQL database dump
--

-- Dumped from database version 16.2
-- Dumped by pg_dump version 16.2 (Ubuntu 16.2-1.pgdg22.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: cron_management; Type: SCHEMA; Schema: -; Owner: stefan
--

CREATE SCHEMA cron_management;


ALTER SCHEMA cron_management OWNER TO stefan;

--
-- Name: alter_job(bigint, text, text, text, text, boolean); Type: FUNCTION; Schema: cron_management; Owner: stefan
--

CREATE FUNCTION cron_management.alter_job(job_id bigint, schedule text DEFAULT NULL::text, command text DEFAULT NULL::text, database text DEFAULT NULL::text, username text DEFAULT NULL::text, active boolean DEFAULT NULL::boolean) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'cron'
    AS $$ 
BEGIN 
        PERFORM alter_job(job_id, schedule, command, database, username, active);
END;
$$;


ALTER FUNCTION cron_management.alter_job(job_id bigint, schedule text, command text, database text, username text, active boolean) OWNER TO stefan;

--
-- Name: schedule(text, text); Type: FUNCTION; Schema: cron_management; Owner: stefan
--

CREATE FUNCTION cron_management.schedule(schedule text, command text) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'cron'
    AS $$ 
BEGIN 
        RETURN cron.schedule(schedule, command);
END;
$$;


ALTER FUNCTION cron_management.schedule(schedule text, command text) OWNER TO stefan;

--
-- Name: schedule(text, text, text); Type: FUNCTION; Schema: cron_management; Owner: stefan
--

CREATE FUNCTION cron_management.schedule(job_name text, schedule text, command text) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'cron'
    AS $$ 
BEGIN 
        RETURN cron.schedule(job_name, schedule, command);
END;
$$;


ALTER FUNCTION cron_management.schedule(job_name text, schedule text, command text) OWNER TO stefan;

--
-- Name: schedule_in_database(text, text, text, text, text, boolean); Type: FUNCTION; Schema: cron_management; Owner: stefan
--

CREATE FUNCTION cron_management.schedule_in_database(job_name text, schedule text, command text, database text, username text DEFAULT NULL::text, active boolean DEFAULT true) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'cron'
    AS $$ 
BEGIN 
        RETURN schedule_in_database(job_name, schedule, command, database, username, active);
END;
$$;


ALTER FUNCTION cron_management.schedule_in_database(job_name text, schedule text, command text, database text, username text, active boolean) OWNER TO stefan;

--
-- Name: show_job_runs(); Type: FUNCTION; Schema: cron_management; Owner: stefan
--

CREATE FUNCTION cron_management.show_job_runs() RETURNS TABLE(jobid bigint, runid bigint, job_pid integer, database text, username text, command text, status text, return_message text, start_time timestamp with time zone, end_time timestamp with time zone)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'cron'
    AS $$ 
BEGIN 
        RETURN QUERY
        TABLE cron.job_run_details;
END;
$$;


ALTER FUNCTION cron_management.show_job_runs() OWNER TO stefan;

--
-- Name: show_jobs(); Type: FUNCTION; Schema: cron_management; Owner: stefan
--

CREATE FUNCTION cron_management.show_jobs() RETURNS TABLE(jobid bigint, schedule text, command text, nodename text, nodeport integer, database text, username text, active boolean, jobname text)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'cron'
    AS $$ 
BEGIN 
        RETURN QUERY
        TABLE cron.job;
END;
$$;


ALTER FUNCTION cron_management.show_jobs() OWNER TO stefan;

--
-- Name: unschedule(bigint); Type: FUNCTION; Schema: cron_management; Owner: stefan
--

CREATE FUNCTION cron_management.unschedule(job_id bigint) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'cron'
    AS $$ 
BEGIN 
        RETURN unschedule(job_id);
END;
$$;


ALTER FUNCTION cron_management.unschedule(job_id bigint) OWNER TO stefan;

--
-- Name: unschedule(name); Type: FUNCTION; Schema: cron_management; Owner: stefan
--

CREATE FUNCTION cron_management.unschedule(job_name name) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'cron'
    AS $$ 
BEGIN 
        RETURN unschedule(job_name);
END;
$$;


ALTER FUNCTION cron_management.unschedule(job_name name) OWNER TO stefan;

--
-- Name: job; Type: VIEW; Schema: cron_management; Owner: stefan
--

CREATE VIEW cron_management.job AS
 SELECT jobid,
    schedule,
    command,
    nodename,
    nodeport,
    database,
    username,
    active,
    jobname
   FROM cron.job;


ALTER VIEW cron_management.job OWNER TO stefan;

--
-- Name: job_run_details; Type: VIEW; Schema: cron_management; Owner: stefan
--

CREATE VIEW cron_management.job_run_details AS
 SELECT jobid,
    runid,
    job_pid,
    database,
    username,
    command,
    status,
    return_message,
    start_time,
    end_time
   FROM cron.job_run_details;


ALTER VIEW cron_management.job_run_details OWNER TO stefan;

--
-- Name: SCHEMA cron_management; Type: ACL; Schema: -; Owner: stefan
--

GRANT USAGE ON SCHEMA cron_management TO myuser;


--
-- Name: FUNCTION alter_job(job_id bigint, schedule text, command text, database text, username text, active boolean); Type: ACL; Schema: cron_management; Owner: stefan
--

GRANT ALL ON FUNCTION cron_management.alter_job(job_id bigint, schedule text, command text, database text, username text, active boolean) TO myuser;


--
-- Name: FUNCTION schedule(schedule text, command text); Type: ACL; Schema: cron_management; Owner: stefan
--

GRANT ALL ON FUNCTION cron_management.schedule(schedule text, command text) TO myuser;


--
-- Name: FUNCTION schedule(job_name text, schedule text, command text); Type: ACL; Schema: cron_management; Owner: stefan
--

GRANT ALL ON FUNCTION cron_management.schedule(job_name text, schedule text, command text) TO myuser;


--
-- Name: FUNCTION schedule_in_database(job_name text, schedule text, command text, database text, username text, active boolean); Type: ACL; Schema: cron_management; Owner: stefan
--

GRANT ALL ON FUNCTION cron_management.schedule_in_database(job_name text, schedule text, command text, database text, username text, active boolean) TO myuser;


--
-- Name: FUNCTION show_jobs(); Type: ACL; Schema: cron_management; Owner: stefan
--

GRANT ALL ON FUNCTION cron_management.show_jobs() TO myuser;


--
-- Name: FUNCTION unschedule(job_id bigint); Type: ACL; Schema: cron_management; Owner: stefan
--

GRANT ALL ON FUNCTION cron_management.unschedule(job_id bigint) TO myuser;


--
-- Name: FUNCTION unschedule(job_name name); Type: ACL; Schema: cron_management; Owner: stefan
--

GRANT ALL ON FUNCTION cron_management.unschedule(job_name name) TO myuser;


--
-- Name: TABLE job; Type: ACL; Schema: cron_management; Owner: stefan
--

GRANT SELECT ON TABLE cron_management.job TO myuser;


--
-- Name: TABLE job_run_details; Type: ACL; Schema: cron_management; Owner: stefan
--

GRANT SELECT ON TABLE cron_management.job_run_details TO myuser;


--
-- PostgreSQL database dump complete
--

